<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        WDwff3z/f6d1vurzMYfPAAAAAElFTkSuQmCC
</value>
  </data>
</root>